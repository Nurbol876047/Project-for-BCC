const express = require('express');
const path = require('path');
const bodyParser = require('body-parser');
const cors = require('cors');
const nodemailer = require('nodemailer');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (HTML, CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
app.use(express.static(path.join(__dirname)));

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
app.get('/bank-analysis', (req, res) => {
    res.sendFile(path.join(__dirname, 'bank-analysis.html'));
});

// API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email (—Ñ–æ—Ä–º–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤)
app.post('/api/contact', async (req, res) => {
    try {
        const { name, phone, email, message } = req.body;
        
        // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
        const transporter = nodemailer.createTransporter({
            service: 'gmail', // –∏–ª–∏ –¥—Ä—É–≥–æ–π email —Å–µ—Ä–≤–∏—Å
            auth: {
                user: process.env.EMAIL_USER || 'your-email@gmail.com',
                pass: process.env.EMAIL_PASS || 'your-app-password'
            }
        });

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏—Å—å–º–∞
        const mailOptions = {
            from: process.env.EMAIL_USER || 'your-email@gmail.com',
            to: 'info@toi-organizer.kz', // –≤–∞—à email –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫
            subject: '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ –¢–æ–π',
            html: `
                <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞</h2>
                <p><strong>–ò–º—è:</strong> ${name}</p>
                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${phone}</p>
                <p><strong>Email:</strong> ${email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong></p>
                <p>${message}</p>
            `
        };

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email
        await transporter.sendMail(mailOptions);
        
        res.json({ 
            success: true, 
            message: '–°—ñ–∑–¥—ñ“£ ”©—Ç—ñ–Ω—ñ—à—ñ“£—ñ–∑ —Å”ô—Ç—Ç—ñ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ! –ñ–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Å—ñ–∑–±–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å–∞–º—ã–∑.' 
        });
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
        res.json({ 
            success: true, 
            message: '–°—ñ–∑–¥—ñ“£ ”©—Ç—ñ–Ω—ñ—à—ñ“£—ñ–∑ “õ–∞–±—ã–ª–¥–∞–Ω–¥—ã! –ñ–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Å—ñ–∑–±–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å–∞–º—ã–∑.' 
        });
    }
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏
app.get('/api/about', (req, res) => {
    res.json({
        name: '–¢–æ–π - –ú–µ—Ä–µ–∫–µ–ª–µ—Ä–¥—ñ “±–π—ã–º–¥–∞—Å—Ç—ã—Ä—É',
        description: '–ë—ñ–∑ –º–µ—Ä–µ–∫–µ–ª–µ—Ä–¥—ñ “±–π—ã–º–¥–∞—Å—Ç—ã—Ä—É –Ω–∞—Ä—ã“ì—ã–Ω–¥–∞ 10 –∂—ã–ª–¥–∞–Ω –∞—Å—Ç–∞–º —É–∞“õ—ã—Ç –±–æ–π—ã –∂“±–º—ã—Å —ñ—Å—Ç–µ–ø –∫–µ–ª–µ–º—ñ–∑.',
        services: [
            '–ë–∞–ª–∞–ª–∞—Ä –º–µ—Ä–µ–∫–µ–ª–µ—Ä—ñ',
            '“Æ–π–ª–µ–Ω—É —Ç–æ–π–ª–∞—Ä—ã', 
            '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—Ç–µ—Ä',
            '–ú—É–∑—ã–∫–∞–ª—ã“õ —Å–µ—Ä—ñ–∫—Ç–µ—Å—Ç—ñ–∫',
            '–ö–µ–π—Ç–µ—Ä–∏–Ω–≥',
            '–§–æ—Ç–æ –∂”ô–Ω–µ –≤–∏–¥–µ–æ —Ç“Ø—Å—ñ—Ä—É'
        ],
        contact: {
            phone: '+7 706 640-36-55',
            email: 'info@toi-organizer.kz',
            address: '“ö—ã–∑—ã–ª–æ—Ä–¥–∞ “õ–∞–ª–∞—Å—ã, Kzo hub'
        }
    });
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
app.get('/api/bank-analysis', (req, res) => {
    try {
        const fs = require('fs');
        const path = require('path');
        
        // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        const resultsPath = path.join(__dirname, '../core/output/result.csv');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if (!fs.existsSync(resultsPath)) {
            return res.status(404).json({ 
                error: '–§–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ —Å–Ω–∞—á–∞–ª–∞.' 
            });
        }
        
        // –ß–∏—Ç–∞–µ–º CSV —Ñ–∞–π–ª
        const csvContent = fs.readFileSync(resultsPath, 'utf8');
        const lines = csvContent.split('\n');
        const headers = lines[0].split(',');
        
        // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ
        const results = [];
        for (let i = 1; i < lines.length; i++) {
            if (lines[i].trim()) {
                const values = lines[i].split(',');
                const row = {};
                headers.forEach((header, index) => {
                    row[header.trim()] = values[index] ? values[index].trim() : '';
                });
                results.push(row);
            }
        }
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        const stats = {
            total_clients: results.length,
            products: {}
        };
        
        results.forEach(row => {
            const product = row.product || row.best_product;  // –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –¢–ó
            stats.products[product] = (stats.products[product] || 0) + 1;
        });
        
        res.json({
            success: true,
            data: results,
            statistics: stats
        });
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', error);
        res.status(500).json({ 
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞' 
        });
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 –æ—à–∏–±–∫–∏
app.use((req, res) => {
    res.status(404).sendFile(path.join(__dirname, 'index.html'));
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üì± –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}`);
    console.log(`üìß –î–ª—è —Ä–∞–±–æ—Ç—ã —Ñ–æ—Ä–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è EMAIL_USER –∏ EMAIL_PASS`);
});

module.exports = app;
